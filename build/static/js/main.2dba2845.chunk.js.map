{"version":3,"sources":["reducer.js","actions.js","context.js","SearchForm.js","Stories.js","Buttons.js","App.js","index.js"],"names":["reducer","state","action","type","isLoading","hits","payload","nbPages","filter","story","objectID","query","page","nextPage","prevPage","Error","initialState","AppContext","React","createContext","AppProvider","children","useReducer","dispatch","fetchStories","url","a","fetch","response","json","data","console","log","useEffect","Provider","value","removeStory","id","handleSearch","handlePage","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","onChange","target","Stories","map","title","num_comments","points","author","key","href","rel","onClick","Buttons","disable","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dba2845.chunk.js","sourcesContent":["import {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from './actions'\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return { ...state, isLoading: true }\n    \n    case SET_STORIES:\n      return { ...state, isLoading: false, hits: action.payload.hits, nbPages: action.payload.nbPages }\n    \n    case REMOVE_STORY:\n      return { ...state, hits: state.hits.filter((story) => story.objectID !== action.payload) }\n    case HANDLE_SEARCH:\n      return { ...state, query: action.payload, page: 0 }\n    case HANDLE_PAGE:\n      if (action.payload === 'inc') {\n        let nextPage = state.page + 1;\n        if (nextPage > state.nbPages - 1) {\n          nextPage = 0;\n        }\n        return { ...state, page: nextPage }\n      }\n      if (action.payload === 'dec') {\n        let prevPage = state.page - 1;\n        if (prevPage < 0) {\n          prevPage = state.nbPages-1;\n        }\n        return { ...state, page: prevPage }\n      }\n      \n    default:\n      throw new Error(`no more ${action.type} action type`)\n  }\n }\n\nexport default reducer\n","export const SET_LOADING = 'SET_LOADING'\nexport const SET_STORIES = 'SET_STORIES'\nexport const REMOVE_STORY = 'REMOVE_STORY'\nexport const HANDLE_PAGE = 'HANDLE_PAGE'\nexport const HANDLE_SEARCH = 'HANDLE_SEARCH'\n","import React, { useContext, useEffect, useReducer } from 'react'\n\nimport {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from './actions'\nimport reducer from './reducer'\n\nconst API_ENDPOINT = 'https://hn.algolia.com/api/v1/search?'\n\nconst initialState = {\n  isLoading: true,\n  hits: [],\n  query: 'react',\n  page: 0,\n  nbPages:0,\n}\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const fetchStories = async (url) => {\n    dispatch({type:SET_LOADING})\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      dispatch({ type: SET_STORIES, payload:{hits:data.hits,nbPages:data.nbPages}})\n    }\n    catch(error) {\n      console.log(error)\n    }\n  }\n  useEffect(() => {\n    fetchStories(`${API_ENDPOINT}query=${state.query}&page=${state.page}`);\n},[state.query,state.page])\n\n  const removeStory = (id) => {\n    console.log(id);\n    dispatch({type:REMOVE_STORY,payload:id})\n  }\n  \n  const handleSearch = (query) => {\n    dispatch({type:HANDLE_SEARCH,payload:query})\n    \n  }\n\n  const handlePage = (value) => {\n    console.log(value);\n    dispatch({type:HANDLE_PAGE,payload:value})\n    \n  }\n  \n  \n  return <AppContext.Provider value={{...state,removeStory,handleSearch,handlePage}}>{children}</AppContext.Provider>\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst SearchForm = () => {\n  const { query, handleSearch } = useGlobalContext();\n\n  return (\n    <form className=\"search-form\" onSubmit={(e) => e.preventDefault()}>\n      <h2>search Hacker News</h2>\n      <input type=\"text\" className=\"form-input\" value={query} onChange={(e)=>handleSearch(e.target.value)}></input>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\n\nimport { useGlobalContext } from \"./context\";\n\nconst Stories = () => {\n  const { isLoading, hits,removeStory } = useGlobalContext();\n  if (isLoading) {\n    return <div className=\"loading\"></div>;\n  }\n  return (\n    <section className=\"stories\">\n      {hits.map((story) => {\n        const { objectID, title, num_comments, url, points, author } = story;\n        console.log(story);\n        return (\n          <article key={objectID} className=\"story\">\n            <h4 className=\"title\">{title}</h4>\n            <p className=\"info\">\n              {points} points by <span>{author} | </span>\n              {num_comments} comments\n            </p>\n            <div>\n              <a\n                href={url}\n                className=\"read-link\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                read more\n              </a>\n              <button className=\"remove-btn\" onClick={() => removeStory(objectID)}>remove</button>\n            </div>\n          </article>\n        );\n      })}\n    </section>\n  );\n};\n\nexport default Stories;\n","import React from 'react'\nimport { HANDLE_PAGE } from './actions';\nimport { useGlobalContext } from './context'\n\nconst Buttons = () => {\n  const { isLoading, page, nbPages, handlePage } = useGlobalContext();\n\n  return <div className=\"btn-container\">\n    <button disable={isLoading} onClick={() => handlePage('dec')}>prev</button>\n    <p>{page + 1}of { nbPages}</p>\n    <button disable={isLoading} onClick={() => handlePage('inc')}>next</button>\n  </div>\n}\n\nexport default Buttons\n","import React from 'react'\nimport SearchForm from './SearchForm'\nimport Stories from './Stories'\nimport Buttons from './Buttons'\nfunction App() {\n  return <>\n    <SearchForm />\n    <Buttons />\n    <Stories/>\n  </>\n  \n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}